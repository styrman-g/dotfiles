#+TITLE: Styrmans Emacs config file.
#+AUTHOR: Gustav Hogbring
#+DESCRIPTION: Styrmans personal Emacs config.
#+STARTUP: showeverything
#+OPTIONS: toc:2

* TABLE OF CONTENTS :toc:

* IMPORTANT PROGRAMS TO LOAD FIRST
** Setup the package manager
#+begin_src emacs-lisp
;; Setup the package manager
(require 'package)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                       ("nongnu" . "https://elpa.nongnu.org/nongnu/")
                       ("elpa" . "https://elpa.gnu.org/packages/")))
(package-initialize)
(unless package-archive-contents
(package-refresh-contents))
(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(require 'use-package)
(setq use-package-always-ensure t)
#+end_src

** Setup icons
#+begin_src emacs-lisp
(use-package all-the-icons
  :ensure t
  :if (display-graphic-p))

(use-package all-the-icons-dired
  :hook (dired-mode . (lambda () (all-the-icons-dired-mode t))))
#+end_src
** Setup TRASH
#+begin_src emacs-lisp
(setq backup-directory-alist '((".*" . "~/.local/share/Trash/files")))
#+end_src

** SETUP MY THEME
#+begin_src emacs-lisp
;; Setup Catppuccin as theme
(use-package catppuccin-theme)
(load-theme 'catppuccin :no-confirm)
#+end_src

** SETUP EVIL MODE
#+begin_src emacs-lisp
(require 'evil)
(evil-mode 1) 
#+end_src

** SETUP A STARTSCREEN
#+begin_src emacs-lisp
(use-package dashboard
  :ensure t 
  :init
  (setq initial-buffer-choice 'dashboard-open)
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-banner-logo-title "Emacs Is More Than A Text Editor!")
  (setq dashboard-startup-banner 'logo) ;; use standard emacs logo as banner
  (setq dashboard-center-content nil) ;; set to 't' for centered content
  (setq dashboard-items '((recents . 5)
                          (agenda . 5 )
                          (bookmarks . 3)
                          (projects . 3)
                          (registers . 3)))
  :custom 
  (dashboard-modify-heading-icons '((recents . "file-text")
				      (bookmarks . "book")))
  :config
  (dashboard-setup-startup-hook))
#+end_src

** SETUP CONSULT/MODELINE

#+begin_src emacs-lisp
(use-package consult
  :ensure t
  :bind (
         ("M-s b" . consult-buffer)
         ("M-s g" . consult-grep)
         ("M-s j" . consult-outline)
         ))

;; MODELINE
(use-package doom-modeline
  :ensure t
  :init (doom-modeline-mode 1)
  :config
  (setq doom-modeline-height 35      ;; sets modeline height
        doom-modeline-bar-width 5    ;; sets right bar width
        doom-modeline-persp-name t   ;; adds perspective name to modeline
        doom-modeline-persp-icon t)) ;; adds folder icon next to persp name
#+end_src

* KEYBINDINGS

#+begin_src emacs-lisp
;; Set my KEYBINDINGS
(global-set-key (kbd "C-c e") #'elfeed)

#+end_src

* SETUP SOME SANE DEFAULTS

#+begin_src emacs-lisp
;; MINIBUBBER ESCAPE
(global-set-key [escape] 'keyboard-escape-quit)

;; Set initial major mode to 'org-mode'
(setq initial-major-mode 'org-mode


;; Disable startup message
inhibit-startup-message t

;; Clear the initial scratch message
initial-scratch-message nil

;; Disable backup files
make-backup-files nil

;; Set the frame title format with a palm tree emoji
frame-title-format (list "ðŸŒ´ %b")

;; Set Dired listing switches for more minimalist output
dired-listing-switches "-aghov --group-directories-first")

;; Disable the menu bar
(menu-bar-mode -1)

;; Disable the tool bar
(tool-bar-mode -1)

;; Disable the scroll bar
(scroll-bar-mode -1)

;; LINENUMBER
(global-display-line-numbers-mode 1) ;; Display line numbers

;; Maximize the frame on startup
(toggle-frame-maximized)

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-switchb)
(global-set-key "\C-ct" 'org-todo-list)
(require 'org-id) ; for creating ids
(require 'org-tempo) ; for template expansion

#+end_src

* ELFEED

#+begin_src emacs-lisp
(use-package elfeed
  :config
  (setq elfeed-search-feed-face ":foreground #ffffff :weight bold"
        elfeed-feeds (quote
                       (("https://www.reddit.com/r/linux.rss" reddit linux)
                        ("https://opensource.com/feed" opensource linux)
                        ("https://distrowatch.com/news/dwd.xml" distrowatch linux)))))

#+end_src

